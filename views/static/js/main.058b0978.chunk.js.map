{"version":3,"sources":["variables/charts.js","components/Sidebar.jsx","layouts/Dashboard.jsx","components/Stats.jsx","views/Dashboard.jsx","components/CardAuthor.jsx","components/FormInputs.jsx","components/CustomButton.jsx","components/CardTableRecords.jsx","api/index.js","views/UserProfile.jsx","views/TableUsers.jsx","views/TablePolls.jsx","views/TableVotes.jsx","routes/dashboard.js","components/Header.jsx","components/Footer.jsx","routes/index.js","layouts/Login.jsx","index.js","assets/img/banner_avatar.jpg","assets/img/logo_white.png"],"names":["module","exports","dashboard24HoursPerformanceChart","data","canvas","labels","datasets","borderColor","backgroundColor","pointRadius","pointHoverRadius","borderWidth","options","legend","display","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","color","xAxes","barPercentage","padding","dashboardEmailStatisticsChart","label","pieceLabel","render","precision","dashboardNASDAQChart","fill","pointBorderColor","pointBorderWidth","position","ps","Stats","stats","i","this","props","children","length","push","react_default","a","createElement","className","key","t","React","Component","Dashboard","reactstrap_es","xs","sm","md","lg","tag","components_Stats","react_chartjs_2_es","width","height","CardAuthor","href","link","src","avatar","alt","avatarAlt","title","description","FieldGroup","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","focus","_this2","_this$props","addonLeft","addonRight","formGroupProps","labelProps","inputProps","inputGroupProps","inputGroupAddonProps","classes","undefined","assign","onFocus","e","setState","onBlur","type","FormInputs","_Component","apply","arguments","inherits","createClass","value","row","ncols","FormInputs_FieldGroup","proprieties","CustomButton","simple","round","icon","neutral","leftLabel","rightLabel","wd","fab","rest","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-wd","btn-link","btn-fab","thead","CardTableRecords","records","style","overflow","maxHeight","size","hover","map","u","id","partner","username","moment","time","format","note","baseUrl","getUsers","axios","get","headers","then","res","getPolls","getVotes","console","log","UserProfile","user","getUserByUsername","match","params","userID","catch","err","bannerAvatar","components_CardAuthor","photoUrl","firstName","lastName","company","contacts","o","target","rel","components_CustomButton","outline","components_FormInputs","disabled","defaultValue","email","placeholder","components_CardTableRecords","TableUsers","users","Link","to","tel","borderRadius","TablePolls","polls","eventID","ownerID","eth","contractAddress","startDate","endDate","candidates","dashboardRoutes","path","name","component","noSidebar","TableVotes","votes","txHash","pollID","redirect","pathTo","Header","isOpen","dropdownOpen","toggle","bind","assertThisInitialized","dropdownToggle","prop","collapse","views","location","pathname","document","documentElement","classList","refs","sidebarToggle","window","innerWidth","addEventListener","updateColor","history","indexOf","_this3","expand","fluid","ref","onClick","openSidebar","getBrand","navbar","addonType","nav","caret","right","Footer","default","Date","getYear","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","logo","routes","pro","NavLink","activeClassName","handleActiveClick","handleBgClick","mainPanel","body","action","scrollTop","scrollingElement","components_Sidebar","components_Header","Switch","Redirect","from","Route","components_Footer","indexRoutes","createBrowserHistory","ReactDOM","Router","getElementById","__webpack_require__","p"],"mappings":"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","file":"static/js/main.058b0978.chunk.js","sourcesContent":["const dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\"\n      ],\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n        },\n        {\n          borderColor: \"#f17e5d\",\n          backgroundColor: \"#f17e5d\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n        },\n        {\n          borderColor: \"#fcc468\",\n          backgroundColor: \"#fcc468\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            beginAtZero: false,\n            maxTicksLimit: 5\n            //padding: 20\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"#ccc\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n            display: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardEmailStatisticsChart = {\n  data: canvas => {\n    return {\n      labels: [1, 2, 3],\n      datasets: [\n        {\n          label: \"Emails\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n          borderWidth: 0,\n          data: [342, 480, 530, 120]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    pieceLabel: {\n      render: \"percentage\",\n      fontColor: [\"white\"],\n      precision: 2\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardNASDAQChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: \"#fbc658\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#fbc658\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      },\n      {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: \"#51CACF\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#51CACF\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      }\n    ]\n  },\n  options: {\n    legend: {\n      display: false,\n      position: \"top\"\n    }\n  }\n};\n\nmodule.exports = {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"assets/img/logo_white.png\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div\n        className=\"sidebar\"\n        data-color={this.props.bgColor}\n        data-active-color={this.props.activeColor}\n      >\n        <div className=\"logo\">\n          <a href=\"http://most.bkchain.tk\" className=\"simple-text logo-mini\">\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"most-logo\" />\n            </div>\n          </a>\n          <a href=\"http://most.bkchain.tk\" className=\"simple-text logo-normal\">\n            BKU Blockchain\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              if (prop.noSidebar) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Sidebar from \"../components/Sidebar\";\n// import FixedPlugin from \"../components/FixedPlugin\";\n\nimport { dashboardRoutes } from \"../routes/dashboard\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\"\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n\n  handleActiveClick = color => {\n    this.setState({ activeColor: color });\n  };\n\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n              return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n        {/* <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n          handleActiveClick={this.handleActiveClick}\n          handleBgClick={this.handleBgClick}\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\nimport Stats from \"../components/Stats\";\n\nimport {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n} from \"../variables/charts\";\n\nclass Dashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Capacity</p>\n                      <CardTitle tag=\"p\">150GB</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update Now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-money-coins text-success\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Revenue</p>\n                      <CardTitle tag=\"p\">$ 1,345</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-calendar\",\n                      t: \"Last day\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-vector text-danger\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Errors</p>\n                      <CardTitle tag=\"p\">23</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-clock\",\n                      t: \"In the last hour\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Followers</p>\n                      <CardTitle tag=\"p\">+45K</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Users Behavior</CardTitle>\n                <p className=\"card-category\">24 Hours performance</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboard24HoursPerformanceChart.data}\n                  options={dashboard24HoursPerformanceChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-history\",\n                      t: \" Updated 3 minutes ago\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={4}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Email Statistics</CardTitle>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                  <i className=\"fa fa-circle text-gray\" /> Unopened\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-calendar-alt\",\n                      t: \" Number of emails sent\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} md={8}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle>NASDAQ: AAPL</CardTitle>\n                <p className=\"card-category\">Line Chart With Points</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboardNASDAQChart.data}\n                  options={dashboardNASDAQChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"chart-legend\">\n                  <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-check\",\n                      t: \" Data information certified\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CardAuthor extends React.Component {\n  render() {\n    return (\n      <div className=\"author\">\n        <a href={this.props.link ? this.props.link : \"#\"}>\n          <img\n            className=\"avatar border-gray\"\n            src={this.props.avatar}\n            alt={this.props.avatarAlt}\n          />\n          <h5 className=\"title\">{this.props.title}</h5>\n        </a>\n        <p className=\"description\">{this.props.description}</p>\n      </div>\n    );\n  }\n}\n\nCardAuthor.propTypes = {\n  // Where the user to be redirected on clicking the avatar\n  link: PropTypes.string,\n  avatar: PropTypes.string,\n  avatarAlt: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n\nexport default CardAuthor;\n","import React, { Component } from \"react\";\nimport {\n  FormGroup,\n  Label,\n  Input,\n  InputGroup,\n  InputGroupAddon\n} from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass FieldGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focus: false\n    };\n  }\n  render() {\n    const {\n      label,\n      addonLeft,\n      addonRight,\n      formGroupProps,\n      labelProps,\n      inputProps,\n      inputGroupProps,\n      inputGroupAddonProps\n    } = this.props;\n    var classes = \" \";\n    if (inputGroupProps !== undefined) {\n      if (inputGroupProps.className !== undefined) {\n        classes += inputGroupProps.className + \" \";\n      }\n    }\n    if (addonLeft !== undefined || addonRight !== undefined)\n      return (\n        <InputGroup\n          {...inputGroupProps}\n          className={classes + (this.state.focus ? \"input-group-focus\" : \"\")}\n        >\n          {addonLeft !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonLeft}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n          <Input\n            {...inputProps}\n            onFocus={e => this.setState({ focus: true })}\n            onBlur={e => this.setState({ focus: false })}\n          />\n          {addonRight !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonRight}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n        </InputGroup>\n      );\n    return inputProps.type === \"radio\" || inputProps.type === \"checkbox\" ? (\n      <FormGroup\n        {...formGroupProps}\n        className={inputProps.type === \"radio\" ? \"form-check-radio\" : \"\"}\n      >\n        <Label {...labelProps}>\n          <Input {...inputProps} />\n          <span className=\"form-check-sign\" />\n          {label ? label : \"\"}\n        </Label>\n      </FormGroup>\n    ) : (\n      <FormGroup {...formGroupProps}>\n        {label ? <Label {...labelProps}>{label}</Label> : \"\"}\n        <Input {...inputProps} />\n      </FormGroup>\n    );\n  }\n}\n\nexport class FormInputs extends Component {\n  render() {\n    var row = [];\n    for (var i = 0; i < this.props.ncols.length; i++) {\n      row.push(\n        <div key={i} className={this.props.ncols[i]}>\n          <FieldGroup {...this.props.proprieties[i]} />\n        </div>\n      );\n    }\n    return <div className=\"row\">{row}</div>;\n  }\n}\n\nFormInputs.propTypes = {\n  ncols: PropTypes.arrayOf(PropTypes.string),\n  proprieties: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default FormInputs;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      simple,\n      round,\n      icon,\n      neutral,\n      leftLabel,\n      rightLabel,\n      wd,\n      link,\n      fab,\n      className,\n      ...rest\n    } = this.props;\n\n    var btnClasses = cx({\n      \"btn-simple\": simple,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-wd\": wd,\n      \"btn-link\": link,\n      \"btn-fab\": fab\n    });\n\n    if (className !== undefined) {\n      btnClasses += \" \" + className;\n    }\n\n    return (\n      <Button className={btnClasses} {...rest}>\n        {leftLabel ? (\n          <span className=\"btn-label\">\n            <i className={leftLabel} />{\" \"}\n          </span>\n        ) : null}\n        {this.props.children}\n        {rightLabel ? (\n          <span className=\"btn-label btn-label-right\">\n            <i className={rightLabel} />{\" \"}\n          </span>\n        ) : null}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport { Card, CardBody, Table, Row, Col } from \"reactstrap\";\nimport moment from \"moment\";\n\nconst thead = [\"Partner\", \"Time\", \"Note\"];\n\nclass CardTableRecords extends React.Component {\n  render() {\n    const { records } = this.props;\n\n    return (\n      <Row>\n        <Col xs={12}>\n          <Card>\n            <CardBody style={{ overflow: \"auto\", maxHeight: \"80vh\" }}>\n              <Table size=\"sm\" hover>\n                <thead className=\"text-danger\">\n                  <tr>\n                    {thead.map(u => (\n                      <th key={u}>{u}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {records.map(u => (\n                    <tr key={u.id}>\n                      <td>{u.partner.username}</td>\n                      <td>{moment(u.time).format(\"HH:mm DD/MM/YYYY\")}</td>\n                      <td>{u.note}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default CardTableRecords;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/admin\";\n// set proxy in package.json, use localhost:4200 for development\n\nexport const getUsers = () => {\n  return axios\n    .get(baseUrl + \"/user\", {\n      headers: {}\n    })\n    .then(res => res.data)\n    .then(data => {\n      // console.log(data);\n      return data;\n    });\n};\n\nexport const getPolls = () => {\n  return axios\n    .get(baseUrl + \"/poll\", {\n      headers: {}\n    })\n    .then(res => res.data)\n    .then(data => {\n      // console.log(data);\n      return data;\n    });\n};\n\nexport const getVotes = () => {\n  return axios\n    .get(baseUrl + \"/vote\", {\n      headers: {}\n    })\n    .then(res => res.data)\n    .then(data => {\n      console.log(data);\n      return data;\n    });\n};\n\nexport const getUserByUsername = username => {\n  return axios\n    .get(baseUrl + \"/user/\" + username, {\n      headers: {}\n    })\n    .then(res => res.data)\n    .then(data => {\n      // console.log(data);\n      return data;\n    });\n};\n\nexport const getRecordsByUserID = userID => {\n  return axios\n    .get(baseUrl + \"/record/\" + userID, {\n      headers: {}\n    })\n    .then(res => res.data)\n    .then(data => {\n      // console.log(data);\n      return data;\n    });\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  Row,\n  Col\n} from \"reactstrap\";\n\nimport CardAuthor from \"../components/CardAuthor.jsx\";\nimport FormInputs from \"../components/FormInputs.jsx\";\nimport Button from \"../components/CustomButton.jsx\";\nimport CardTableRecords from \"../components/CardTableRecords\";\n\nimport bannerAvatar from \"../assets/img/banner_avatar.jpg\";\n\nimport { getUserByUsername, getRecordsByUserID } from \"../api\";\n\nclass UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {},\n      records: []\n    };\n  }\n\n  componentWillMount() {\n    const { username } = this.props.match.params || {};\n\n    getUserByUsername(username)\n      .then(user => {\n        this.setState({ user });\n\n        getRecordsByUserID(user.id)\n          .then(records => this.setState({ records }))\n          .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col md={4} xs={12}>\n            <Card className=\"card-user\">\n              <div className=\"image\">\n                <img src={bannerAvatar} alt=\"Banner\" />\n              </div>\n              <CardBody>\n                <CardAuthor\n                  avatar={user.photoUrl || \"/default-avatar.png\"}\n                  avatarAlt=\"...\"\n                  title={user ? user.firstName + \" \" + user.lastName : \"\"}\n                  description={\"@\" + user.username || \"\"}\n                />\n                <p className=\"description text-center\">\n                  {user.company || \"\"} <br />\n                  {user.position || \"\"}\n                </p>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"button-container\">\n                  <Row>\n                    <Col xs={6} sm={6} md={6} lg={3} className=\"ml-auto\">\n                      <h5>\n                        12\n                        <br />\n                        <small>Files</small>\n                      </h5>\n                    </Col>\n                    <Col\n                      xs={6}\n                      sm={6}\n                      md={6}\n                      lg={4}\n                      className=\"mr-auto ml-auto\"\n                    >\n                      <h5>\n                        2GB\n                        <br />\n                        <small>Used</small>\n                      </h5>\n                    </Col>\n                    <Col lg={3} className=\"mr-auto\">\n                      <h5>\n                        24,6$\n                        <br />\n                        <small>Spent</small>\n                      </h5>\n                    </Col>\n                  </Row>\n                </div>\n              </CardFooter>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Contacts</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <ul className=\"list-unstyled team-members\">\n                  {(user.contacts || []).map(o => (\n                    <li key={o.id}>\n                      <Row>\n                        <Col xs={2} md={2}>\n                          <div className=\"avatar\">\n                            <img\n                              src={o.photoUrl || \"/default-avatar.png\"}\n                              alt=\"Avatar\"\n                              className=\"img-circle img-no-padding img-responsive\"\n                            />\n                          </div>\n                        </Col>\n                        <Col xs={7} md={7}>\n                          {(o.firstName || \"\") + \" \" + (o.lastName || \"\")}\n                          <br />\n                          <span className=\"text-danger\">\n                            <small>@{o.username || \"\"}</small>\n                          </span>\n                        </Col>\n                        <Col xs={3} md={3} className=\"text-right\">\n                          <a\n                            href={\"/users/\" + o.username}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <Button size=\"sm\" color=\"danger\" round icon outline>\n                              <i className=\"fa fa-ellipsis-h\" />\n                            </Button>\n                          </a>\n                        </Col>\n                      </Row>\n                    </li>\n                  ))}\n                </ul>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md={8} xs={12}>\n            <Card className=\"card-user\">\n              <CardHeader>\n                <CardTitle>Edit Profile</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <form>\n                  <FormInputs\n                    ncols={[\"col-md-5 pr-1\", \"col-md-3 px-1\", \"col-md-4 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"Organization\",\n                        inputProps: {\n                          type: \"text\",\n                          disabled: true,\n                          defaultValue: \"BKU Blockchain Inc.\"\n                        }\n                      },\n                      {\n                        label: \"Username\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: user.username || \"\"\n                        }\n                      },\n                      {\n                        label: \"Email address\",\n                        inputProps: {\n                          type: \"email\",\n                          defaultValue: user.email || \"\",\n                          placeholder: \"Email\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-6 pr-1\", \"col-md-6 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"First Name\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"First Name\",\n                          defaultValue: user.firstName || \"\"\n                        }\n                      },\n                      {\n                        label: \"Last Name\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"Last Name\",\n                          defaultValue: user.lastName || \"\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-12\"]}\n                    proprieties={[\n                      {\n                        label: \"Company\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"Company\",\n                          defaultValue: user.company || \"\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-12\"]}\n                    proprieties={[\n                      {\n                        label: \"Position\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"Position\",\n                          defaultValue: user.position || \"\"\n                        }\n                      }\n                    ]}\n                  />\n                  {/* <FormInputs\n                    ncols={[\"col-md-4 pr-1\", \"col-md-4 px-1\", \"col-md-4 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"City\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"Melbourne\",\n                          placeholder: \"City\"\n                        }\n                      },\n                      {\n                        label: \"Country\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"Australia\",\n                          placeholder: \"Country\"\n                        }\n                      },\n                      {\n                        label: \"Postal Code\",\n                        inputProps: {\n                          type: \"number\",\n                          placeholder: \"ZIP Code\"\n                        }\n                      }\n                    ]}\n                  /> */}\n                  {/* <FormInputs\n                    ncols={[\"col-md-12\"]}\n                    proprieties={[\n                      {\n                        label: \"About Me\",\n                        inputProps: {\n                          type: \"textarea\",\n                          defaultValue:\n                            \"Oh so, your weak rhyme You doubt I'll bother, reading into it\",\n                          placeholder: \"Here can be your description\"\n                        }\n                      }\n                    ]}\n                  /> */}\n                  <Row>\n                    <div className=\"update ml-auto mr-auto\">\n                      <Button color=\"primary\" round>\n                        Update Profile\n                      </Button>\n                    </div>\n                  </Row>\n                </form>\n              </CardBody>\n            </Card>\n\n            <Card className=\"card-user\">\n              <CardHeader>\n                <CardTitle>Records</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <CardTableRecords records={this.state.records} />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport { getUsers } from \"../api\";\n\nconst thead = [\n  \"\",\n  \"Username\",\n  \"Email\",\n  \"Tel\",\n  \"Photo\",\n  \"Name\",\n  \"Company\",\n  \"Position\"\n];\n\nclass TableUsers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: []\n    };\n\n    getUsers()\n      .then(users => this.setState({ users }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Users</CardTitle>\n              </CardHeader>\n              <CardBody style={{ overflow: \"auto\", maxHeight: \"80vh\" }}>\n                <Table size=\"sm\" hover>\n                  <thead className=\"text-danger\">\n                    <tr>\n                      {thead.map((u, i) =>\n                        i === thead.length - 1 ? (\n                          <th key={u} className=\"text-right\">\n                            {u}\n                          </th>\n                        ) : (\n                          <th key={u}>{u}</th>\n                        )\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody style={{ overflow: \"auto\" }}>\n                    {this.state.users.map(u => (\n                      <tr key={u.id}>\n                        <td>\n                          <Link to={\"/users/\" + u.username}>\n                            <i className=\"fa fa-link text-danger\" />\n                          </Link>\n                        </td>\n                        <td>\n                          <Link\n                            to={\"/users/\" + u.username}\n                            style={{ color: \"#176075\" }}\n                          >\n                            {u.username}\n                          </Link>\n                        </td>\n                        <td>{u.email}</td>\n                        <td className=\"text-right\">{u.tel}</td>\n                        <td className=\"text-center\">\n                          <img\n                            src={u.photoUrl}\n                            alt=\"Avatar\"\n                            width={30}\n                            style={{ borderRadius: \"50%\" }}\n                          />\n                        </td>\n                        <td>\n                          {(u.firstName || \"\") + \" \" + (u.lastName || \"\")}\n                        </td>\n                        <td>{u.company}</td>\n                        <td className=\"text-right\">{u.position}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default TableUsers;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { getPolls } from \"../api\";\nimport moment from \"moment\";\n\nconst thead = [\n  \"\",\n  \"Event ID\",\n  \"Owner ID\",\n  \"Contract Address\",\n  \"Start Date\",\n  \"End Date\",\n  \"No.Cand\",\n  \"Title\"\n];\n\nclass TablePolls extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      polls: []\n    };\n\n    getPolls()\n      .then(polls => this.setState({ polls }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Polls</CardTitle>\n              </CardHeader>\n              <CardBody style={{ overflow: \"auto\", maxHeight: \"80vh\" }}>\n                <Table size=\"sm\" hover>\n                  <thead className=\"text-danger\">\n                    <tr>\n                      {thead.map(u => (\n                        <th key={u}>{u}</th>\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.polls.map(u => (\n                      <tr key={u.id}>\n                        <td>\n                          <Link to={\"/polls/\" + u.id}>\n                            <i className=\"fa fa-link text-danger\" />\n                          </Link>\n                        </td>\n                        <td>{u.eventID}</td>\n                        <td>{u.ownerID}</td>\n                        <td>\n                          <a\n                            href={\n                              \"https://ropsten.etherscan.io/address/\" +\n                              u.eth.contractAddress\n                            }\n                            style={{ color: \"#176075\" }}\n                          >\n                            {u.eth.contractAddress}\n                          </a>\n                        </td>\n                        <td className=\"text-right\">\n                          {moment(u.startDate).format(\"HH:mm DD/MM/YYYY\")}\n                        </td>\n                        <td className=\"text-right\">\n                          {moment(u.endDate).format(\"HH:mm DD/MM/YYYY\")}\n                        </td>\n                        <td className=\"text-center\">{u.candidates.length}</td>\n                        <td>{u.title}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default TablePolls;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { getVotes } from \"../api\";\nimport moment from \"moment\";\n\nconst thead = [\n  \"\",\n  \"ID\",\n  \"User ID\",\n  \"Transaction Hash\",\n  \"Poll ID\",\n  \"Contract Address\",\n  \"Start Date\",\n  \"End Date\"\n];\n\nclass TableVotes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      votes: []\n    };\n\n    getVotes()\n      .then(votes => this.setState({ votes }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Votes</CardTitle>\n              </CardHeader>\n              <CardBody style={{ overflow: \"auto\", maxHeight: \"80vh\" }}>\n                <Table size=\"sm\" hover>\n                  <thead className=\"text-danger\">\n                    <tr>\n                      {thead.map(u => (\n                        <th key={u}>{u}</th>\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.votes.map(u => (\n                      <tr key={u.id}>\n                        <td>\n                          <i className=\"fa fa-link text-danger\" />\n                        </td>\n                        <td>{u.id}</td>\n                        <td>{u.userID}</td>\n                        <td>\n                          <a\n                            href={\n                              \"https://ropsten.etherscan.io/tx/\" + u.eth.txHash\n                            }\n                            style={{ color: \"#176075\" }}\n                          >\n                            {u.eth.txHash}\n                          </a>\n                        </td>\n                        <td>{u.pollID.id}</td>\n                        <td>\n                          <a\n                            href={\n                              \"https://ropsten.etherscan.io/address/\" +\n                              u.pollID.eth.contractAddress\n                            }\n                            style={{ color: \"#176075\" }}\n                          >\n                            {u.pollID.eth.contractAddress}\n                          </a>\n                        </td>\n                        <td className=\"text-right\">\n                          {moment(u.pollID.startDate).format(\n                            \"HH:mm DD/MM/YYYY\"\n                          )}\n                        </td>\n                        <td className=\"text-right\">\n                          {moment(u.pollID.endDate).format(\"HH:mm DD/MM/YYYY\")}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default TableVotes;\n","import Dashboard from \"../views/Dashboard\";\nimport UserProfile from \"../views/UserProfile\";\nimport TableUsers from \"../views/TableUsers\";\n// import TableRecords from \"../views/TableRecords\";\nimport TablePolls from \"../views/TablePolls\";\nimport TableVotes from \"../views/TableVotes\";\n// import Notifications from \"views/Notifications/Notifications.jsx\";\n// import Typography from \"views/Typography/Typography.jsx\";\n// import Maps from \"views/Maps/Maps.jsx\";\n\nexport const dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard\n  },\n  {\n    noSidebar: true,\n    path: \"/users/:username\",\n    component: UserProfile\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"nc-icon nc-badge\",\n    component: TableUsers\n  },\n  {\n    path: \"/polls\",\n    name: \"Polls\",\n    icon: \"nc-icon nc-money-coins\",\n    component: TablePolls\n  },\n  {\n    path: \"/votes\",\n    name: \"Votes\",\n    icon: \"nc-icon nc-chart-bar-32\",\n    component: TableVotes\n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"nc-icon nc-diamond\",\n  //   component: Icons\n  // },\n  // { path: \"/maps\", name: \"Maps\", icon: \"nc-icon nc-pin-3\", component: Maps },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   icon: \"nc-icon nc-bell-55\",\n  //   component: Notifications\n  // },\n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"nc-icon nc-caps-small\",\n  //   component: Typography\n  // },\n  { redirect: true, path: \"/\", pathTo: \"/dashboard\", name: \"Dashboard\" }\n];\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\nimport { dashboardRoutes } from \"../routes/dashboard\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form>\n            <Nav navbar>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-magnify\">\n                  <i className=\"nc-icon nc-layout-11\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\n                  </p>\n                </Link>\n              </NavItem>\n              <Dropdown\n                nav\n                isOpen={this.state.dropdownOpen}\n                toggle={e => this.dropdownToggle(e)}\n              >\n                <DropdownToggle caret nav>\n                  <i className=\"nc-icon nc-bell-55\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag=\"a\">Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Something else here</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-rotate\">\n                  <i className=\"nc-icon nc-settings-gear-65\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Account</span>\n                  </p>\n                </Link>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <nav className=\"footer-nav\">\n              <ul>\n                <li>\n                  <a href=\"http://most.bkchain.tk\" target=\"_blank\">BKU Blockchain</a>\n                </li>\n                <li>\n                  <a href=\"https://blog.creative-tim.com\" target=\"_blank\">Blog</a>\n                </li>\n                <li>\n                  <a href=\"http://most.bkchain.tk/license\" target=\"_blank\">Licenses</a>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"credits ml-auto\">\n              <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with <i className=\"fa fa-heart heart\"></i> by BKU Blockchain\n              </div>\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import Dashboard from \"../layouts/Dashboard.jsx\";\nimport Login from \"../layouts/Login.jsx\";\n\nvar indexRoutes = [\n  { path: \"/login\", name: \"Login\", component: Login },\n  { path: \"/\", name: \"Home\", component: Dashboard }\n];\n\nexport default indexRoutes;\n","import React from \"react\";\n\nexport default class Login extends React.Component {\n  render() {\n    return <div>Login</div>;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\n\nimport indexRoutes from \"./routes/index\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <Switch>\n      {indexRoutes.map((prop, key) => {\n        return <Route path={prop.path} key={key} component={prop.component} />;\n      })}\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/banner_avatar.a6f24e7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo_white.181c89d7.png\";"],"sourceRoot":""}